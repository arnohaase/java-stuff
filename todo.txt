todo
----
* annotation processor
* Lombok
* sun.misc.Unsafe

* Objektidentität und Classloader

* Serializable --> Customizing
  * Externalizable
  * private void writeObject(java.io.ObjectOutputStream out) throws IOException
  * private void readObject(java.io.ObjectInputStream in)    throws IOException, ClassNotFoundException;
  * private void readObjectNoData()                          throws ObjectStreamException; (!) --> zeigen
  
* many ways to create an instance
  * ctor
  * static factory method
  * Builder
  * DI
    * Guice?
  * Singleton --> public static final INSTANCE
  * reflection --> Thread.currentThread().getContextClassLoader()
    * + System Property
  * ServiceLoader
    * + 'canHandle'

* Guava
* ProtoBuf
* aggregating total and count in Map
  * initial: NumAndCount-Klasse mit synchronized (Race Condition beim Initialisieren außer Acht gelassen)
    * --> Umbau auf lock-frei
  * concurrent: thread safe update ---> volatile
  * race condition on initializing map --> double checked locking
  * atomic --> AtomicReference

  * Messungen zum Vergleich --> wie?

* Character Encodings, CharSet
* Obstacles for Class Unloading

* partial order

* stand-alone soap
* JDI
